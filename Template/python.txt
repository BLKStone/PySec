ipython for windows  --> pip install ipython
ptpython for windows --> pip install ptpython

python3 -m pip install xxx
概念
0x1 生成器迭代器
    对一个list或tuple，可通过for循环来遍历这个list或tuple，这种遍历称为迭代（Iteration）
    可迭代对象都可以用于for循环

    判断是否可迭代
    from collections import Iterable
    isinstance('abc', Iterable)     # str 是否可迭代

    生成器generator
    通过算法推出，边循环边计算，减少内存，比如列表中存一百万个数
    保存的是算法

    创建生成器  [] --> ()
        g = (x * x for x in xrange(100))

0x2  函数式编程
    map(fun,list)
    filter(fun,list)
    less_than_zero = [x for x in number_list if x < 0]
    less_than_zero2 = filter(lambda x:x<0,number_list)
    reduce(fun,list)
    from functools import reduce
    product = reduce( (lambda x, y: x * y), [1, 2, 3, 4] )

0x3 三元运算
    a = 12 if b > 10 else 11
    
0x4 装饰器
    将一个函数作为参数传递给装饰器函数
    from functools import wraps
    def a_new_decorator(fun):
        @warp(fun)                  
        def warp():
            print "xxx"
            fun()
            print "ooo"
    return warp

    @a_new_decorator                 # @方式
    def new():
        print "i am new"
    #new = a_new_decorator(new)     #  一般方式
    new()
    print new.__name__

0x04 推导式
    list  xx_list = [a for a in range(10)]
    dict xx_dict = {v:k for k, v in a.items()}
    集合 {a for a in range(10)}


python for encode

    chr  ascii函数  chr(97) == 'a'

python for debug
    0x1 python -m pdb xxx.py
        c: 继续执行
        w: 显示当前正在执行的代码行的上下文信息
        a: 打印当前函数的参数列表
        s: 执行当前代码行，并停在第一个能停的地方（相当于单步进入）
        n: 继续执行到当前函数的下一行，或者当前行直接返回（单步跳过）
        help c

python to exe
    pyinstaller --onefile <scriptname>
    
python for data analysis
    0x01 pandas
        
    0x02 numpy
    0x03 matplotlib


''.join([random.choice(string.ascii_lowercase) for x in range(6)])      随即字符串
hashlib.md5('admin').hexdigest()                                        md5
print 'ok' if response else 'no'                        response 状态码在[400,600] 返回False
python -c "import csv,json;print json.dumps(list(csv.reader(open('csv_file.csv'))))"  csv-json
reader = csv.reader(file(file_name,'rb'))

-------------------------------------------------------------------------
filter 进行过滤
filter(lambda x: True if '@' not in x else False, ['admin','123','aa@g.com','c@123'])

reduce 进行累加
reduce(lambda x,y: x+y, ['who','am','i'])   == ''.join(['who','am','i'])
reduce(lambda x,y: x+y, range(1,101))

map 进行映射
map(lambda x:str(x)+'@qq.com',['112','admin'])
---------------------------------------------------------------------------

生成ip段